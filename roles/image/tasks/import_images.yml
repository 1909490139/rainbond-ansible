---
- name: Check | Check if base.image.tgz is unarchive
  stat: path=/grdata/services/offline/images/etcd.tgz
  register: check_base_image_tgz_unarchive

- name: Notice | pause while Unzip base image
  pause:
    seconds: 10
    prompt: "Waiting Unzip base image Ok"

- name: Rainbond | Unzip base image Ok
  unarchive:
    src: /grdata/services/offline/base.images.tgz
    dest: /grdata/services/offline/images
  when: check_base_image_tgz_unarchive.stat.isreg is not defined

- name: Check | Check if rainbond.image.tgz is unarchive
  stat: path=/grdata/services/offline/images/mq.tgz
  register: check_rainbond_image_tgz_unarchive

- name: Notice | pause while Unzip rainbond image
  pause:
    seconds: 10
    prompt: "Waiting Unzip rainbond image Ok"

- name: Rainbond | Unzip rainbond image Ok
  unarchive:
    src: /grdata/services/offline/rainbond.images.tgz
    dest: /grdata/services/offline/images
  when: check_rainbond_image_tgz_unarchive.stat.isreg is not defined

- name: Notice | pause while load image
  pause:
    seconds: 10
    prompt: "Waiting load image Ok"

- name: Rainbond | load image from local ok
  shell: "bash {{ base_dir }}/offline/images/load.sh > /tmp/local.image.log"
  register: load_task_result
  until: load_task_result is succeeded
  retries: 4