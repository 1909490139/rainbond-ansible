---
- name: Health | Add Health Role
  template:
    src: health.role.j2
    dest: "{{ node_role_dir }}/health.yaml"

- name: Rainbond | Add Dns Role
  template:
    src: dns.role.j2
    dest: "{{ node_role_dir }}/dns.yaml"

- name: Health | Add Dns Health Check
  template:
    src: "{{ base_dir }}/hack/files/health/rbd-dns.sh"
    dest: "{{ rbd_dir }}/health/rbd-dns.sh"
    mode: 0777

- name: Health | Add local Dns Health Check
  template:
    src: local-dns.sh.j2
    dest: "{{ rbd_dir }}/health/local-dns.sh"
    mode: 0777

- name: Health | Add network Health Check
  template:
    src: "network_{{ CLUSTER_NETWORK }}.sh.j2"
    dest: "{{ rbd_dir }}/health/network.sh"
    mode: 0777

- name: Health | Add Dns Health Check
  template:
    src: "{{ base_dir }}/hack/files/health/storage.sh"
    dest: "{{ rbd_dir }}/health/storage.sh"
    mode: 0777

- name: Rainbond | check cni bin
  shell: "ls {{ rbd_dir }}/bin/calico"
  register: re_cni_is_done
  ignore_errors: true

- name: Rainbond | Copy cni bin
  copy: src={{ item }} dest={{ rbd_dir }}/bin owner=root mode=777
  with_fileglob:
    - "{{ rbd_dir }}/etc/tools/cni/bin/*"
  when: re_cni_is_done.rc != 0 

- name: Rainbond | Copy tools
  copy: src={{ item }} dest={{ bin_dir }} owner=root mode=777
  with_fileglob:
    - "{{ rbd_dir }}/etc/tools/bin/*"
  when: re_cni_is_done.rc != 0 

- name: Rainbond | check kubecfg
  shell: "ls {{ kubecfg_dir }}/token.csv"
  register: ck_kubecfg_is_done
  ignore_errors: true

- name: Rainbond | Copy kubecfg
  copy: src={{ item }} dest={{ kubecfg_dir }}
  with_fileglob:
    - "{{ kubecfg_dir }}/*"
  when: ck_kubecfg_is_done.rc != 0 

- name: Rainbond | check ssl
  shell: "ls {{ ca_dir }}/ca.pem"
  register: ck_ssl_is_done
  ignore_errors: true

- name: Rainbond | Copy ssl
  copy: src={{ item }} dest={{ ca_dir }}
  with_fileglob:
    - "{{ ca_dir }}/*"
  when: ck_ssl_is_done.rc != 0 

- name: Rainbond | check region ssl
  shell: "ls {{ region_ca_dir }}/ca.pem"
  register: ck_ca_ssl_is_done
  ignore_errors: true

- name: Rainbond | Copy region ssl
  copy: src={{ item }} dest={{ region_ca_dir }}
  with_fileglob:
    - "{{ region_ca_dir }}/*"
  when: ck_ca_ssl_is_done.rc != 0 