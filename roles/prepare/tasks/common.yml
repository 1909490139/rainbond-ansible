---
- name: prepare rainbond
  file: name={{ item }} state=directory
  with_items:
    - "{{ bin_dir }}"
    - "{{ ca_dir }}"
    - /cache/build
    - /cache/source
    - "{{ rbd_dir }}/etc/rbd-api/region.goodrain.me/ssl"
    - "{{ rbd_dir }}/etc/kubernetes/ssl"
    - "{{ rbd_dir }}/etc/kubernetes/kubecfg"
    - "{{ rbd_dir }}/health"
    - "{{ rbd_dir }}/data"
    - "{{ rbd_dir }}/logs"
    - "{{ rbd_dir }}/envs"
    - "{{ rbd_dir }}/scripts/init"
    - "{{ rbd_dir }}/conf"
    - "{{ rbd_dir }}/etc/cni"
    - "{{ rbd_dir }}/bin"
    - "{{ rbd_dir }}/etc/node"
    - "{{ rbd_dir }}/.init"
    - "{{ rbd_dir }}/etc/tools"
    - "{{ rbd_dir }}/rainbond-ansible"
    - /root/.kube
    - /etc/docker
    - /root/.rbd
    - /grdata/services/ssh
    - /grdata/services/storage
    - /grdata/services/offline/images
    - /grdata/kubernetes
    - /etc/NetworkManager/conf.d
    - /etc/calico
    - /etc/docker/certs.d/goodrain.me
    - "{{ install_logs_dir }}"
  tags:
    - master

- name: populate inventory into hosts file
  blockinfile:
    dest: /etc/hosts
    block: |-
      {% for item in (groups['master'] + groups['worker'] + groups['etcd'] + groups['lb'] + groups['new-master'] + groups['new-worker'] |default([]))|unique -%}
      {{hostvars[item]['ip']}} {{ item }}
      {% endfor %}
    state: present
    create: yes
    backup: yes
    marker: "# Ansible inventory hosts {mark}"

- name: localhost ipv4 in hosts file
  lineinfile:
    dest: /etc/hosts
    line: "127.0.0.1 localhost localhost.localdomain"
    regexp: '^127.0.0.1.*$'
    state: present
    backup: yes

- name: localhost ipv6 in hosts file
  lineinfile:
    dest: /etc/hosts
    line: "::1 localhost6 localhost6.localdomain"
    regexp: '^::1.*$'
    state: present
    backup: yes

- name: Copy Rainbond Tools
  copy: src={{ item }} dest={{ bin_dir }} owner=root mode=777
  with_fileglob:
    - "{{ base_dir }}/hack/files/bin/grtools/*"

- name: Create Rain User Group
  group:
    name: rain
    gid: 200
    system: yes
    state: present

- name: Create Rain User
  user:
    name: rain
    uid: 200
    shell: /sbin/nologin
    comment: "Rainbond user"
    create_home: yes
    groups: rain
    system: yes
    state: present

- name: Create remote_tmp for it is used by another module
  file:
    path: "{{ lookup('config', 'DEFAULT_REMOTE_TMP', on_missing='skip', wantlist=True) | first | default('~/.ansible/tmp') }}"
    state: directory
    mode: 0700

# add calico config 
- name: add NetworkManager 
  template: 
    src: calico.conf.j2 
    dest: /etc/NetworkManager/conf.d/calico.conf
  ignore_errors: True

- name: disable swap
  shell: "swapoff -a && sysctl -w vm.swappiness=0"
  ignore_errors: true

- name: disable swap from fstab 
  lineinfile:
    path: /etc/fstab
    regexp: 'swap'
    state: absent
    backup: 'yes'
  tags: prepare

- name: modprobe 
  modprobe: name={{ item }} state=present
  with_items:
    - br_netfilter
    - ip_vs
    - ip_vs_rr
    - ip_vs_wrr
    - ip_vs_sh
    - nf_conntrack_ipv4 # kernel < 4.19
    - nf_conntrack  # kernel >= 4.19
  ignore_errors: true
  tags: prepare

#- name: add nf_conntrack for kernel 4.19
#  modprobe: name=nf_conntrack state=present
#  ignore_errors: true
#  when: '"4.19" in ansible_kernel'

- name: enable systemd modules
  service: name=systemd-modules-load enabled=yes

- name: enable k8s kernel modules 
  template: src=10-k8s-modules.conf.j2 dest=/etc/modules-load.d/10-k8s-modules.conf

- name:  update ulimits
  template: src=30-k8s-ulimits.conf.j2 dest=/etc/security/limits.d/30-k8s-ulimits.conf

- name:  update k8s.sysctl 
  template: src=95-k8s-sysctl.conf.j2 dest=/etc/sysctl.d/95-k8s-sysctl.conf

- name: sysctl -p 
  shell: "sysctl -p /etc/sysctl.d/95-k8s-sysctl.conf"
  ignore_errors: true

- name: Copy goodrain.me certificate
  copy:
    src: "{{ base_dir }}/hack/files/ssl/goodrain.me/server.crt"
    dest: /etc/docker/certs.d/goodrain.me/server.crt

- name: Copy grctl from deploy
  template:
    src: grctl.yaml.j2
    dest: /root/.rbd/grctl.yaml