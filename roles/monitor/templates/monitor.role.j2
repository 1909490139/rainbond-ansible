version: '2.1'
services:
- name: rbd-monitor
  endpoints:
  - name: MONITOR_ENDPOINTS
    protocol: http
    port: 3329
  - name: PROMETHEUS_ENDPOINTS
    protocol: http
    port: 9999
  health:
    name: rbd-monitor
    model: http
    address: 127.0.0.1:3329/monitor/health
    max_errors_num: 3
    time_interval: 5
  after:
    - docker
  type: simple
  pre_start: docker rm rbd-monitor
  start: >-
    docker run --name rbd-monitor
    --network host
    -v {{ rbd_dir }}/data/prom:/prometheusdata
    -v {{ rbd_dir }}/etc/prom/config:/etc/prometheus/config
    -i goodrain.me/{{ monitor }}
    --etcd-endpoints=${ETCD_ENDPOINTS} --advertise-addr={{ nodeip }}:9999 --alertmanager-address={{ nodeip }}:9093  --web.listen-address=0.0.0.0:9999 --config.file=/etc/prometheus/config/prometheus.yml --rules-config.file=/etc/prometheus/config/rules.yml --storage.tsdb.path=/prometheusdata --storage.tsdb.no-lockfile --storage.tsdb.retention=7d --log.level=info --kube-state-metrics={{ nodeip }}:9105 --mysqld-exporter={{ nodeip }}:9104
  stop: docker stop rbd-monitor
  restart_policy: always
  restart_sec: 10

- name: kube-state-metrics
  endpoints:
  - name: METRICS_ENDPOINTS
    protocol: http
    port: 9105
  health:
    name: ksm-health
    model: http
    address: 127.0.0.1:9105/healthz
    max_errors_num: 3
    time_interval: 5
  after:
    - docker
  type: simple
  pre_start: docker rm kube-state-metrics
  start: >-
    docker run --name kube-state-metrics
    --network host
    -v {{ kubecfg_dir }}/admin.kubeconfig:/admin.kubeconfig
    -i goodrain.me/kube-state-metrics
    /kube-state-metrics --kubeconfig /admin.kubeconfig --port 9105 --telemetry-port 9981
  stop: docker stop kube-state-metrics
  restart_policy: always
  restart_sec: 10

- name: mysqld-exporter
  endpoints:
  - name: MYSQLD_METRICS_ENDPOINTS
    protocol: http
    port: 9104
  health:
    name: mysqld-exporter
    model: tcp
    address: 127.0.0.1:9104
    max_errors_num: 3
    time_interval: 5
  after:
    - docker
  type: simple
  pre_start: docker rm mysqld-exporter
  start: >-
    docker run --name mysqld-exporter
    --network host
    -e DATA_SOURCE_NAME="{{ db_user }}:{{ db_pass }}@tcp({{ db_host }}:{{ db_port }})/"
    -i goodrain.me/mysqld-exporter
  stop: docker stop mysqld-exporter
  restart_policy: always
  restart_sec: 10

- name: metrics-server
  endpoints:
  - name: METRICS_SERVER_ENDPOINTS
    protocol: https
    port: "4443"
  is_init_start: false
  disable: false
  after:
  - docker
  requires: []
  type: simple
  pre_start: docker rm metrics-server
  start: docker run
    --privileged
    --name metrics-server
    --network host
    -v /opt/rainbond/etc/kubernetes/kubecfg:/opt/rainbond/etc/kubernetes/kubecfg
    -v /opt/rainbond/etc/metrics-server/ssl:/opt/rainbond/etc/metrics-server/ssl
    -i goodrain.me/metrics-server:v0.3.6
    --kubeconfig=/opt/rainbond/etc/kubernetes/kubecfg/admin.kubeconfig
    --cert-dir=/opt/rainbond/etc/metrics-server/ssl
    --secure-port=4443
    --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
    --kubelet-insecure-tls
  stop: docker stop rbd-monitor
  restart_policy: always
  restart_sec: "10"


